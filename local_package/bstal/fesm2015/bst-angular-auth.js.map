{"version":3,"file":"bst-angular-auth.js","sources":["../../../projects/bst-angular-auth/src/lib/provider-authentication.service.ts","../../../projects/bst-angular-auth/src/bst-angular-auth.ts"],"sourcesContent":["import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { AuthenticationResult, InteractionType, LogLevel, PublicClientApplication } from '@azure/msal-browser';\nimport { FirebaseApp, getApp, getApps, initializeApp } from '@firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithEmailAndPassword, signInWithPopup, signOut, User, UserCredential } from '@firebase/auth';\nimport { AuthenticationDetails, CognitoUser, CognitoUserPool, CognitoUserSession } from 'amazon-cognito-identity-js';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProviderAuthenticationService implements OnDestroy {\n  providerConfiguration: any;\n  accountSubject = new ReplaySubject<IUser>(1);\n  activeUser: any;\n  application: any;\n\n  constructor(\n    @Inject('config') @Optional() public config?: any\n  ) {\n    this.loadConfiguration(config);\n    window.addEventListener('load', async () => {\n      this.loadEventListener();\n    });\n  }\n\n  signIn(): Promise<IUser> {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.AZURE:\n          return new Promise((resolve, reject) => {\n            this.getApplication().loginPopup().then((authenticationResult: AuthenticationResult) => {\n              authenticationResult !== null ? resolve(this.getUser(authenticationResult)): reject();\n            });\n          });\n        case EProviders.FIREBASE:\n          return new Promise((resolve, reject) => {\n            signInWithPopup(this.getAuthentication(), new GoogleAuthProvider()).then((userCredential: UserCredential) => {\n              userCredential !== null ? resolve(this.getUser(userCredential)): reject();\n            });\n          });\n        case EProviders.COGNITO:\n          return new Promise((resolve, reject) => {\n            try {\n              const uri = `${this.providerConfiguration.domainUrl}/login?client_id=${this.providerConfiguration.userPoolWebClientId}&response_type=${this.providerConfiguration.responseType}&scope=aws.cognito.signin.user.admin+email+openid+profile&redirect_uri=${this.providerConfiguration.redirectUrl}`;\n              window.location.assign(uri);\n              Promise.resolve(this.getUser({}));\n            } catch (error) {\n              reject(error);\n            }\n          });\n        default:\n          throw new Error(`${this.providerConfiguration?.provider} doesnt have an signIn option!`);\n      }\n    } catch (error) {\n      throw new Error(`${this.providerConfiguration?.provider} getting error when signIn, Error : ${error}!`);\n    }\n  }\n\n  signInWithCredentials(username: string, password: string): Promise<IUser> {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.FIREBASE:\n          return new Promise((resolve, reject) => {\n            signInWithEmailAndPassword(this.getAuthentication(), username, password).then((userCredential: UserCredential) => {\n              userCredential !== null ? resolve(this.getUser(userCredential)) : reject();\n            });\n          });\n          case EProviders.COGNITO:\n            const user = new CognitoUser({ Username: username, Pool: this.getApplication() });\n            const authenticationDetails = new AuthenticationDetails({ Username: username, Password: password });\n            return new Promise((resolve, reject) =>\n              user.authenticateUser(authenticationDetails, {\n                onSuccess: result => resolve(this.getUser(result)),\n                onFailure: err => reject(err)\n              })\n            );\n        default:\n          throw new Error( `${this.providerConfiguration?.provider} doesnt have an signInWithCredentials option!`);\n      }\n    } catch (error) {\n      throw new Error( `${this.providerConfiguration?.provider} getting error when signInWithCredentials, Error : ${error}!`);\n    }\n  }\n\n  signOut(): Promise<void> {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.AZURE:\n          return new Promise((resolve, reject) => {\n            this.getApplication().logoutRedirect({}).then(() => {\n              this.clearActiveUser();\n              resolve();\n            }).catch((error: any) => {\n              reject(error);\n            });\n          });\n        case EProviders.FIREBASE:\n          return new Promise((resolve, reject) => {\n            signOut(this.getAuthentication()).then(() => {\n              this.clearActiveUser();\n              resolve();\n            }).catch((error) => {\n              reject(error);\n            });\n          });\n        case EProviders.COGNITO:\n          return new Promise((resolve, reject) => {\n            this.getApplication().getCurrentUser().signOut();\n            this.clearActiveUser();\n            resolve();\n          });\n        default:\n          throw new Error(`${this.providerConfiguration?.provider} doesnt have an signOut option!`);\n      }\n    } catch (error) {\n      throw new Error(`${this.providerConfiguration?.provider} getting error when signOut, Error : ${error}!`);\n    }\n  }\n\n  getCognitoAccessToken(): string {\n    let accessToken = '';\n    if(this.providerConfiguration.provider === EProviders.COGNITO && this.providerConfiguration.responseType === 'token' && window.location.href.indexOf(\"access_token\") != -1 ) {\n      let urlParams = window.location.hash.replace(\"#\",\"\").split('&');\n      urlParams.forEach(param => {\n        if(param.startsWith(\"access_token\") && param.length > 1) {\n          accessToken = param.replace(\"access_token=\", \"\")\n        }\n      });\n    }\n    return accessToken;\n  }\n\n  getActiveUser(): Promise<IUser> {\n    return new Promise((resolve, reject) => {\n      if (this.retrieveToken() !== '') {\n        resolve(this.activeUser);\n      }\n      reject(`No user is currently logged in the application`);\n    });\n  }\n\n  interceptorConfigFactory(): unknown {\n    switch (this.providerConfiguration?.provider) {\n      case EProviders.AZURE:\n        const protectedResourceMap = new Map<string, Array<string>>();\n        protectedResourceMap.set('https://graph.microsoft.com/v1.0/me', [\n          'user.read',\n        ]);\n        return {\n          interactionType: InteractionType.Redirect,\n          protectedResourceMap,\n        };\n      case EProviders.FIREBASE:\n      case EProviders.COGNITO:\n      default:\n        return null;\n    }\n  }\n\n  guardConfigFactory(): unknown {\n    switch (this.providerConfiguration?.provider) {\n      case EProviders.AZURE:\n        return {\n          interactionType: InteractionType.Redirect,\n          authRequest: {\n            scopes: [`${this.providerConfiguration.auth.clientId}/.default`],\n          },\n          loginFailedRoute: this.providerConfiguration.login_failed_route,\n        };\n      case EProviders.FIREBASE:\n      case EProviders.COGNITO:\n      default:\n        return null;\n    }\n  }\n  \n  private loadConfiguration(configuration: any){\n    if (configuration !== undefined) {\n      this.providerConfiguration = this.getConfiguration(configuration);\n    }\n  }\n\n  private loadEventListener(): Promise<IUser> {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.AZURE:\n          return new Promise((resolve, reject) => {\n            this.getApplication().handleRedirectPromise().then((authenticationResult: AuthenticationResult) => {\n              authenticationResult !== null ? resolve(this.getUser(authenticationResult)): reject();\n            });\n          });\n        case EProviders.FIREBASE:\n          return new Promise((resolve, reject) => {\n            this.getAuthentication().onAuthStateChanged((user: User | null) => {\n              if(user !== null) {\n                resolve(this.getUser(user));\n              }\n            });\n          });\n        case EProviders.COGNITO:\n          return Promise.resolve(this.getUser({}));\n        default:\n          throw new Error(`${this.providerConfiguration?.provider} doesnt have an load event option!`);\n      }\n    } catch (error) {\n      throw new Error(`${this.providerConfiguration?.provider} getting error when listen the load Event, Error : ${error}!`);\n    }\n  }\n\n  private getConfiguration(configuration: any): IAzureConfig | IFirebaseConfig | ICognitoConfig {\n    try {\n      configuration.tokenName = configuration.tokenName !== undefined && configuration.tokenName !== null ? configuration.tokenName : 'auth_token';\n      switch (configuration.provider) {\n        case EProviders.AZURE:\n          return {\n            auth: configuration.auth,\n            cache: configuration.cache,\n            provider: configuration.provider,\n            system: {\n              loggerOptions: {\n                loggerCallback: (level: any, message: any, containsPii: any) => {\n                  if (!containsPii) {\n                    this.logger(level, message);\n                  }\n                  return;\n                },\n              },\n            },\n          };\n        case EProviders.FIREBASE:\n        case EProviders.COGNITO:\n          return configuration;\n        default:\n          throw new Error(`no configuration found for given provider: ${this.providerConfiguration?.provider}`);\n      }\n    } catch (error) {\n      throw new Error(`${this.providerConfiguration?.provider} getting error when configure, Error : ${error}!`);\n    }\n  }\n\n  private logger(level: number, message: string): void {\n    switch (level) {\n      case LogLevel.Error:\n        console.error(message);\n        break;\n      case LogLevel.Info:\n        console.info(message);\n        break;\n      case LogLevel.Verbose:\n        console.debug(message);\n        break;\n      case LogLevel.Warning:\n        console.warn(message);\n        break;\n      default:\n        console.log(message);\n        break;\n    }\n  }\n\n  private getApplication(): PublicClientApplication | FirebaseApp | any {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.AZURE:\n          if(this.application === undefined) {\n            this.application = new PublicClientApplication(this.providerConfiguration);\n          }\n          return this.application;\n        case EProviders.FIREBASE:\n          const ourApp = getApps().filter((app: FirebaseApp) => {\n            return app.name === 'auth-app';\n          });\n          return ourApp.length === 1 ? getApp('auth-app'): initializeApp(this.providerConfiguration, 'auth-app');\n        case EProviders.COGNITO:\n          if(this.application === undefined) {\n            this.application = new CognitoUserPool({\n              UserPoolId: this.providerConfiguration.userPoolId,\n              ClientId: this.providerConfiguration.userPoolWebClientId\n            });\n          }\n          return this.application;\n        default:\n          throw new Error(`no application found for provider - ${this.providerConfiguration?.provider}`);\n      }\n    } catch (error) {\n      throw new Error( `${this.providerConfiguration?.provider} getting error when initializing the application, Error : ${error}!`);\n    }\n  }\n\n  private getAuthentication(): any {\n    try {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.FIREBASE:\n          return getAuth(this.getApplication());\n        default:\n          throw new Error( `no authentication found for application, provider - ${this.providerConfiguration?.provider}`);\n      }\n    } catch (error) {\n      throw new Error(`${this.providerConfiguration?.provider} getting error when getting auth for the application, Error : ${error}!`);\n    }\n  }\n\n  private getUser(result: any): IUser {\n    const user: IUser = {\n      provider: this.providerConfiguration?.provider,\n      response: result,\n    };\n    if (result !== null || result !== undefined) {\n      switch (this.providerConfiguration?.provider) {\n        case EProviders.AZURE:\n          user.userName = result.account.username;\n          user.authToken = result.accessToken;\n          break;\n        case EProviders.FIREBASE:\n          if (result.user != null) {\n            user.authToken = result.user.accessToken;\n            user.userName = result.user.displayName;\n          }\n          break;\n        case EProviders.COGNITO:\n          if(this.providerConfiguration.responseType === 'token') {\n            user.authToken = this.getCognitoAccessToken();\n          };\n          const cognitoUser: CognitoUser = this.getApplication().getCurrentUser();\n          if(cognitoUser !== null) {\n            cognitoUser.getSession((error: Error | null, session: CognitoUserSession): any => {\n              if(error){\n                throw error;\n              } else {\n                user.authToken = session.getAccessToken().getJwtToken();\n              }\n            });\n            user.userName = cognitoUser.getUsername();\n            user.response = cognitoUser;\n          }\n      }\n      if (user !== null) {\n        this.accountSubject.next(user);\n        this.persistToken(user.authToken || '');\n      }\n    }\n    this.activeUser = user;\n    return user;\n  }\n\n  private persistToken(token: string): void {\n    localStorage.setItem(this.providerConfiguration.tokenName, token);\n  }\n\n  private retrieveToken(): string | null {\n    return localStorage.getItem(this.providerConfiguration.tokenName);\n  }\n\n  private clearActiveUser(): void {\n    const emptyUser: IUser = {\n      provider: this.providerConfiguration?.provider,\n    };\n    this.accountSubject.next(emptyUser);\n    this.accountSubject.unsubscribe();\n    this.activeUser = null;\n    localStorage.removeItem(this.providerConfiguration.tokenName);\n  }\n\n  ngOnDestroy(): void {\n    this.clearActiveUser();\n  }\n\n}\n\nexport interface IFirebaseConfig {\n  provider?: EProviders;\n  apiKey: string;\n  authDomain: string;\n  databaseURL?: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n  measurementId: string;\n  redirectUri?: string;\n  login_failed_route?: string;\n  login_route?: string;\n  tokenName?: string;\n}\n\nexport interface IAzureConfig {\n  provider?: EProviders;\n  auth: {\n    clientId: string;\n    redirectUri: string;\n    authority: string;\n  },\n  cache: {\n    cacheLocation: string;\n    storeAuthStateInCookie: boolean;\n  },\n  system?: any;\n  loginFailedRoute?: string;\n  loginRoute?: string;\n  responseType?: string;\n  tokenName?: string;\n}\n\nexport interface ICognitoConfig {\n  provider?: EProviders;\n  userPoolId: string;\n  userPoolWebClientId: string;\n  domainUrl: string;\n  redirectUrl: string;\n  loginFailedRoute?: string;\n  loginRoute?: string;\n  responseType: string;\n  tokenName?: string;\n}\n\nexport interface IUser {\n  provider: string;\n  userName?: string;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  authToken?: string;\n  response?: any;\n}\n\nexport enum EProviders {\n  AZURE,\n  FIREBASE,\n  COGNITO,\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;MAUa,6BAA6B,CAAA;AAMxC,IAAA,WAAA,CACuC,MAAY,EAAA;QAAZ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAM;AALnD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,aAAa,CAAQ,CAAC,CAAC,CAAC;AAO3C,QAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAC/B,QAAA,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;YACzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B,CAAA,CAAC,CAAC;KACJ;IAED,MAAM,GAAA;;QACJ,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,KAAK;oBACnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,wBAAA,IAAI,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,oBAA0C,KAAI;AACrF,4BAAA,oBAAoB,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAE,MAAM,EAAE,CAAC;AACxF,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,QAAQ;oBACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,wBAAA,eAAe,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,cAA8B,KAAI;AAC1G,4BAAA,cAAc,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,GAAE,MAAM,EAAE,CAAC;AAC5E,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,OAAO;oBACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;wBACrC,IAAI;4BACF,MAAM,GAAG,GAAG,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAA,iBAAA,EAAoB,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAA,eAAA,EAAkB,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAA,uEAAA,EAA0E,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAA,CAAE,CAAC;AACjS,4BAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC5B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,yBAAA;AAAC,wBAAA,OAAO,KAAK,EAAE;4BACd,MAAM,CAAC,KAAK,CAAC,CAAC;AACf,yBAAA;AACH,qBAAC,CAAC,CAAC;AACL,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAgC,8BAAA,CAAA,CAAC,CAAC;AAC5F,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,oCAAA,EAAuC,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AACzG,SAAA;KACF;IAED,qBAAqB,CAAC,QAAgB,EAAE,QAAgB,EAAA;;QACtD,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,QAAQ;oBACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,wBAAA,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,cAA8B,KAAI;AAC/G,4BAAA,cAAc,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC;AAC7E,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACH,KAAK,UAAU,CAAC,OAAO;AACrB,oBAAA,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AAClF,oBAAA,MAAM,qBAAqB,GAAG,IAAI,qBAAqB,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AACpG,oBAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KACjC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;AAC3C,wBAAA,SAAS,EAAE,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBAClD,SAAS,EAAE,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC;AAC9B,qBAAA,CAAC,CACH,CAAC;AACN,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAE,CAAA,EAAG,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAA+C,6CAAA,CAAA,CAAC,CAAC;AAC5G,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAE,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,mDAAA,EAAsD,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AACzH,SAAA;KACF;IAED,OAAO,GAAA;;QACL,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,KAAK;oBACnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,wBAAA,IAAI,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAK;4BACjD,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,4BAAA,OAAO,EAAE,CAAC;AACZ,yBAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,KAAI;4BACtB,MAAM,CAAC,KAAK,CAAC,CAAC;AAChB,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,QAAQ;oBACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;wBACrC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAK;4BAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,4BAAA,OAAO,EAAE,CAAC;AACZ,yBAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,KAAI;4BACjB,MAAM,CAAC,KAAK,CAAC,CAAC;AAChB,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,OAAO;oBACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;wBACrC,IAAI,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC,OAAO,EAAE,CAAC;wBACjD,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,wBAAA,OAAO,EAAE,CAAC;AACZ,qBAAC,CAAC,CAAC;AACL,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAiC,+BAAA,CAAA,CAAC,CAAC;AAC7F,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,qCAAA,EAAwC,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AAC1G,SAAA;KACF;IAED,qBAAqB,GAAA;QACnB,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAA,IAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,KAAK,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,qBAAqB,CAAC,YAAY,KAAK,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAG;AAC3K,YAAA,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChE,YAAA,SAAS,CAAC,OAAO,CAAC,KAAK,IAAG;AACxB,gBAAA,IAAG,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvD,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;AACjD,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;IAED,aAAa,GAAA;QACX,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE;AAC/B,gBAAA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC1B,aAAA;YACD,MAAM,CAAC,CAAgD,8CAAA,CAAA,CAAC,CAAC;AAC3D,SAAC,CAAC,CAAC;KACJ;IAED,wBAAwB,GAAA;;AACtB,QAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;YAC1C,KAAK,UAAU,CAAC,KAAK;AACnB,gBAAA,MAAM,oBAAoB,GAAG,IAAI,GAAG,EAAyB,CAAC;AAC9D,gBAAA,oBAAoB,CAAC,GAAG,CAAC,qCAAqC,EAAE;oBAC9D,WAAW;AACZ,iBAAA,CAAC,CAAC;gBACH,OAAO;oBACL,eAAe,EAAE,eAAe,CAAC,QAAQ;oBACzC,oBAAoB;iBACrB,CAAC;YACJ,KAAK,UAAU,CAAC,QAAQ,CAAC;YACzB,KAAK,UAAU,CAAC,OAAO,CAAC;AACxB,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;KACF;IAED,kBAAkB,GAAA;;AAChB,QAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;YAC1C,KAAK,UAAU,CAAC,KAAK;gBACnB,OAAO;oBACL,eAAe,EAAE,eAAe,CAAC,QAAQ;AACzC,oBAAA,WAAW,EAAE;wBACX,MAAM,EAAE,CAAC,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAA,SAAA,CAAW,CAAC;AACjE,qBAAA;AACD,oBAAA,gBAAgB,EAAE,IAAI,CAAC,qBAAqB,CAAC,kBAAkB;iBAChE,CAAC;YACJ,KAAK,UAAU,CAAC,QAAQ,CAAC;YACzB,KAAK,UAAU,CAAC,OAAO,CAAC;AACxB,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;KACF;AAEO,IAAA,iBAAiB,CAAC,aAAkB,EAAA;QAC1C,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;AACnE,SAAA;KACF;IAEO,iBAAiB,GAAA;;QACvB,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,KAAK;oBACnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,wBAAA,IAAI,CAAC,cAAc,EAAE,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,oBAA0C,KAAI;AAChG,4BAAA,oBAAoB,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAE,MAAM,EAAE,CAAC;AACxF,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,QAAQ;oBACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;wBACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAiB,KAAI;4BAChE,IAAG,IAAI,KAAK,IAAI,EAAE;gCAChB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7B,6BAAA;AACH,yBAAC,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;gBACL,KAAK,UAAU,CAAC,OAAO;oBACrB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAoC,kCAAA,CAAA,CAAC,CAAC;AAChG,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,mDAAA,EAAsD,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AACxH,SAAA;KACF;AAEO,IAAA,gBAAgB,CAAC,aAAkB,EAAA;;QACzC,IAAI;YACF,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,KAAK,SAAS,IAAI,aAAa,CAAC,SAAS,KAAK,IAAI,GAAG,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC;YAC7I,QAAQ,aAAa,CAAC,QAAQ;gBAC5B,KAAK,UAAU,CAAC,KAAK;oBACnB,OAAO;wBACL,IAAI,EAAE,aAAa,CAAC,IAAI;wBACxB,KAAK,EAAE,aAAa,CAAC,KAAK;wBAC1B,QAAQ,EAAE,aAAa,CAAC,QAAQ;AAChC,wBAAA,MAAM,EAAE;AACN,4BAAA,aAAa,EAAE;gCACb,cAAc,EAAE,CAAC,KAAU,EAAE,OAAY,EAAE,WAAgB,KAAI;oCAC7D,IAAI,CAAC,WAAW,EAAE;AAChB,wCAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC7B,qCAAA;oCACD,OAAO;iCACR;AACF,6BAAA;AACF,yBAAA;qBACF,CAAC;gBACJ,KAAK,UAAU,CAAC,QAAQ,CAAC;gBACzB,KAAK,UAAU,CAAC,OAAO;AACrB,oBAAA,OAAO,aAAa,CAAC;AACvB,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,2CAAA,EAA8C,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAE,CAAA,CAAC,CAAC;AACzG,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,uCAAA,EAA0C,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AAC5G,SAAA;KACF;IAEO,MAAM,CAAC,KAAa,EAAE,OAAe,EAAA;AAC3C,QAAA,QAAQ,KAAK;YACX,KAAK,QAAQ,CAAC,KAAK;AACjB,gBAAA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACvB,MAAM;YACR,KAAK,QAAQ,CAAC,IAAI;AAChB,gBAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtB,MAAM;YACR,KAAK,QAAQ,CAAC,OAAO;AACnB,gBAAA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACvB,MAAM;YACR,KAAK,QAAQ,CAAC,OAAO;AACnB,gBAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtB,MAAM;AACR,YAAA;AACE,gBAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,MAAM;AACT,SAAA;KACF;IAEO,cAAc,GAAA;;QACpB,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,KAAK;AACnB,oBAAA,IAAG,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;wBACjC,IAAI,CAAC,WAAW,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC5E,qBAAA;oBACD,OAAO,IAAI,CAAC,WAAW,CAAC;gBAC1B,KAAK,UAAU,CAAC,QAAQ;oBACtB,MAAM,MAAM,GAAG,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAgB,KAAI;AACnD,wBAAA,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;AACjC,qBAAC,CAAC,CAAC;oBACH,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAE,aAAa,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;gBACzG,KAAK,UAAU,CAAC,OAAO;AACrB,oBAAA,IAAG,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;AACjC,wBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC;AACrC,4BAAA,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,UAAU;AACjD,4BAAA,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,mBAAmB;AACzD,yBAAA,CAAC,CAAC;AACJ,qBAAA;oBACD,OAAO,IAAI,CAAC,WAAW,CAAC;AAC1B,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,oCAAA,EAAuC,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAE,CAAA,CAAC,CAAC;AAClG,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAE,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,0DAAA,EAA6D,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AAChI,SAAA;KACF;IAEO,iBAAiB,GAAA;;QACvB,IAAI;AACF,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,QAAQ;AACtB,oBAAA,OAAO,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;AACxC,gBAAA;AACE,oBAAA,MAAM,IAAI,KAAK,CAAE,CAAA,oDAAA,EAAuD,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAE,CAAA,CAAC,CAAC;AACnH,aAAA;AACF,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,EAAG,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAA,8DAAA,EAAiE,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AACnI,SAAA;KACF;AAEO,IAAA,OAAO,CAAC,MAAW,EAAA;;AACzB,QAAA,MAAM,IAAI,GAAU;AAClB,YAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,0CAAE,QAAQ;AAC9C,YAAA,QAAQ,EAAE,MAAM;SACjB,CAAC;AACF,QAAA,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;AAC3C,YAAA,QAAQ,MAAA,IAAI,CAAC,qBAAqB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ;gBAC1C,KAAK,UAAU,CAAC,KAAK;oBACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;AACxC,oBAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC;oBACpC,MAAM;gBACR,KAAK,UAAU,CAAC,QAAQ;AACtB,oBAAA,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;wBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;wBACzC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AACzC,qBAAA;oBACD,MAAM;gBACR,KAAK,UAAU,CAAC,OAAO;AACrB,oBAAA,IAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,KAAK,OAAO,EAAE;AACtD,wBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC/C,qBAAA;oBAAA,CAAC;oBACF,MAAM,WAAW,GAAgB,IAAI,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;oBACxE,IAAG,WAAW,KAAK,IAAI,EAAE;wBACvB,WAAW,CAAC,UAAU,CAAC,CAAC,KAAmB,EAAE,OAA2B,KAAS;AAC/E,4BAAA,IAAG,KAAK,EAAC;AACP,gCAAA,MAAM,KAAK,CAAC;AACb,6BAAA;AAAM,iCAAA;gCACL,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC,WAAW,EAAE,CAAC;AACzD,6BAAA;AACH,yBAAC,CAAC,CAAC;AACH,wBAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;AAC1C,wBAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC7B,qBAAA;AACJ,aAAA;YACD,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;AACzC,aAAA;AACF,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,OAAO,IAAI,CAAC;KACb;AAEO,IAAA,YAAY,CAAC,KAAa,EAAA;QAChC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACnE;IAEO,aAAa,GAAA;QACnB,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;KACnE;IAEO,eAAe,GAAA;;AACrB,QAAA,MAAM,SAAS,GAAU;AACvB,YAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,qBAAqB,0CAAE,QAAQ;SAC/C,CAAC;AACF,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AAClC,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;KAC/D;IAED,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;AAnWU,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,kBAO9B,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAPP,6BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,cAF5B,MAAM,EAAA,CAAA,CAAA;4FAEP,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAHzC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;0BAQI,MAAM;2BAAC,QAAQ,CAAA;;0BAAG,QAAQ;;IAwZnB,WAIX;AAJD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAQ,CAAA;AACR,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACT,CAAC,EAJW,UAAU,KAAV,UAAU,GAIrB,EAAA,CAAA,CAAA;;AC7aD;;AAEG;;;;"}